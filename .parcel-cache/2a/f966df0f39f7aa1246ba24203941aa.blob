"use strict";

var helpers = require("../../../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");

var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = void 0;

  var _react = _interopRequireWildcard(require("react"));

  var _styledComponents = _interopRequireDefault(require("styled-components"));

  var _Tile = _interopRequireDefault(require("./Tile"));

  var _texture = _interopRequireDefault(require("url:../../assets/texture.jpg"));

  var _usePieces = _interopRequireDefault(require("../hooks/usePieces"));

  var _jsxFileName = "/Users/kkalamarski/Projects/chess/public/src/components/ChessBoard.tsx",
      _s = $RefreshSig$();

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

  function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  const ChessBoardWrapper = _c = _styledComponents.default.section`
  margin: 0 auto;
  width: 640px;
  height: 640px;
  display: grid;
  grid-template-columns: repeat(8, 1fr);
  background: url(${_texture.default});
  border: 2px solid black;
`;

  const ChessBoard = () => {
    _s();

    const pieces = (0, _usePieces.default)();
    const [selected, setSelected] = (0, _react.useState)(null);

    const onTileClick = tile => () => {
      if (!selected) {
        setSelected(tile);
        return;
      }

      if (tile === selected) {
        setSelected(null);
        return;
      }

      if (selected) {
        // move pieces
        setSelected(null);
        return;
      }
    };

    const tiles = Array(64).fill("").map((_, i) => {
      const color = (i + Math.floor(i / 8)) % 2 === 0 ? "#faf4d3" : "#806443";
      const file = "abcdefgh"[i % 8];
      const row = -Math.floor(i / 8) + 8;
      const tile = file + row;
      return /*#__PURE__*/_react.default.createElement(_Tile.default, {
        color: color,
        tile: tile,
        key: tile,
        selected: tile === selected,
        piece: pieces?.[tile.toUpperCase()],
        onTileClick: onTileClick(tile),
        __self: void 0,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 49,
          columnNumber: 9
        }
      });
    });
    return /*#__PURE__*/_react.default.createElement(ChessBoardWrapper, {
      __self: void 0,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 60,
        columnNumber: 10
      }
    }, tiles);
  };

  _s(ChessBoard, "CKc4dB1Va1MNjMe+tNi29VX5u7c=", false, function () {
    return [_usePieces.default];
  });

  _c2 = ChessBoard;
  var _default = ChessBoard;
  exports.default = _default;

  var _c, _c2;

  $RefreshReg$(_c, "ChessBoardWrapper");
  $RefreshReg$(_c2, "ChessBoard");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}